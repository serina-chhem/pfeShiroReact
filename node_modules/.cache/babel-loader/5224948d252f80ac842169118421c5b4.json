{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n\nconst Dictaphone = () => {\n  _s();\n\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SpeechRecognition.startListening({\n        language: 'fr-FR'\n      }),\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SpeechRecognition.stopListening,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetTranscript,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dictaphone, \"jh1/qkmPhH2Ui4CQVO5LElRfLv0=\", false, function () {\n  return [useSpeechRecognition];\n});\n\n_c = Dictaphone;\nexport default Dictaphone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictaphone\");","map":{"version":3,"sources":["/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/src/App.js"],"names":["React","SpeechRecognition","useSpeechRecognition","Dictaphone","transcript","resetTranscript","browserSupportsSpeechRecognition","startListening","language","stopListening"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,IAA4BC,oBAA5B,QAAwD,0BAAxD;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAkCH,oBAAoB,EAA5D;;AAEA,MAAI,CAACD,iBAAiB,CAACK,gCAAlB,EAAL,EAA2D;AACzD,WAAO,IAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEL,iBAAiB,CAACM,cAAlB,CAAiC;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAjC,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEP,iBAAiB,CAACQ,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEJ,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAfD;;GAAMD,U;UACoCD,oB;;;KADpCC,U;AAgBN,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\n\nconst Dictaphone = () => {\n  const { transcript, resetTranscript } = useSpeechRecognition()\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return null\n  }\n\n  return (\n    <div>\n      <button onClick={SpeechRecognition.startListening({ language: 'fr-FR' })}>Start</button>\n      <button onClick={SpeechRecognition.stopListening}>Stop</button>\n      <button onClick={resetTranscript}>Reset</button>\n      <p>{transcript}</p>\n    </div>\n  )\n}\nexport default Dictaphone;\n"]},"metadata":{},"sourceType":"module"}