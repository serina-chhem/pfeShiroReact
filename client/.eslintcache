[{"C:\\Users\\Jordan\\Desktop\\Cours\\ING5\\PFE\\pfeShiroReact\\client\\src\\index.js":"1","C:\\Users\\Jordan\\Desktop\\Cours\\ING5\\PFE\\pfeShiroReact\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Jordan\\Desktop\\Cours\\ING5\\PFE\\pfeShiroReact\\client\\src\\App.js":"3","C:\\Users\\Jordan\\Desktop\\Cours\\ING5\\PFE\\pfeShiroReact\\client\\src\\components\\MainPage.js":"4","C:\\Users\\Jordan\\Desktop\\Cours\\ING5\\PFE\\pfeShiroReact\\client\\src\\components\\Form.js":"5","C:\\Users\\Jordan\\Desktop\\Cours\\ING5\\PFE\\pfeShiroReact\\client\\src\\components\\Navbar.js":"6","C:\\Users\\Jordan\\Desktop\\Cours\\ING5\\PFE\\pfeShiroReact\\client\\src\\components\\Cro.js":"7","C:\\Users\\Jordan\\Desktop\\Cours\\ING5\\PFE\\pfeShiroReact\\client\\src\\components\\Dictaphone.js":"8"},{"size":527,"mtime":1612356922335,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1611673416709,"results":"11","hashOfConfig":"10"},{"size":1090,"mtime":1612356920150,"results":"12","hashOfConfig":"10"},{"size":9533,"mtime":1612356928054,"results":"13","hashOfConfig":"10"},{"size":9157,"mtime":1612356929015,"results":"14","hashOfConfig":"10"},{"size":1100,"mtime":1612356917118,"results":"15","hashOfConfig":"10"},{"size":3701,"mtime":1612357239123,"results":"16","hashOfConfig":"10"},{"size":872,"mtime":1612356982004,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"khgjw3",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\Jordan\\Desktop\\Cours\\ING5\\PFE\\pfeShiroReact\\client\\src\\index.js",[],["38","39"],"C:\\Users\\Jordan\\Desktop\\Cours\\ING5\\PFE\\pfeShiroReact\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Jordan\\Desktop\\Cours\\ING5\\PFE\\pfeShiroReact\\client\\src\\App.js",[],"C:\\Users\\Jordan\\Desktop\\Cours\\ING5\\PFE\\pfeShiroReact\\client\\src\\components\\MainPage.js",["40","41","42","43","44"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../App.css\";\r\nimport Serina from \"../images/serina.JPG\";\r\nimport Etienne from \"../images/etienne.jpg\";\r\nimport Nathan from \"../images/nathan.jpg\";\r\nimport Jordan from \"../images/jordan.jpg\";\r\nimport Thomas from \"../images/thomas.jpg\";\r\n\r\nimport Surgeons from \"../images/surgeons.svg\";\r\nimport Fonctionnalite1 from \"../images/func1.svg\";\r\nimport Fonctionnalite2 from \"../images/func2.svg\";\r\nimport Fonctionnalite3 from \"../images/func3.svg\";\r\nimport Fonctionnalite4 from \"../images/func4.svg\";\r\nimport Fonctionnalite5 from \"../images/func5.svg\";\r\nimport Fonctionnalite6 from \"../images/func6.svg\";\r\n\r\nexport default class MainPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"Blanc\">\r\n                    <div className=\"Accueil\">\r\n                        <h1>\r\n                            L'assistant vocal qui comprend les comptes-rendus\r\n                            des chirurgiens\r\n                        </h1>\r\n                        <img\r\n                            src={Surgeons}\r\n                            alt=\"surgeonsAccueil\"\r\n                            className=\"imgAccueil\"\r\n                        />\r\n\r\n                        <div className=\"buttonAccueil\">\r\n                            <button>\r\n                                <Link to=\"/form\" className=\"nav-link\">\r\n                                    Enregistrement d'un CRO\r\n                                </Link>\r\n                            </button>\r\n\r\n                            <button>\r\n                                <Link to=\"/cro\" className=\"nav-link\">\r\n                                    Suivi des CROs\r\n                                </Link>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"Bleu\">\r\n                    <div className=\"Propos\" id=\"propos\">\r\n                        <h1>À propos</h1>\r\n                        <p>\r\n                            <span class=\"marge\">\r\n                                Ce projet baptisé SHIRO est né du Centre de\r\n                                Recherche Interdisciplinaires de Paris et vise à\r\n                                alléger le travail des chirurgiens praticiens\r\n                                hospitaliers lors de la rédaction de\r\n                                comptes-rendus opératoires.\r\n                            </span>\r\n                            <br />\r\n                            <br />\r\n                            <span class=\"marge\">\r\n                                En effet, des chirurgiens peuvent passer en\r\n                                moyenne une heure par jour à rédiger\r\n                                manuellement des comptes-rendus et les font\r\n                                valider par un secrétariat. D'autres\r\n                                enregistrent leurs comptes-rendus sur un\r\n                                dictaphone et les font transcrire en texte par\r\n                                un tiers.\r\n                            </span>\r\n                            <br />\r\n                            <br />\r\n                            <span class=\"marge\">\r\n                                En partant de ce constat, nous avons eu\r\n                                l'intention de supprimer toute étape de\r\n                                validation par un tiers et ainsi d'optimiser les\r\n                                tâches secondaires du corps chirugical. Nous\r\n                                avons donc décidé de créer un assistant vocal\r\n                                permettant l'automatisation de la rédaction d’un\r\n                                compte-rendu opératoire.\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"Blanc\">\r\n                    <div className=\"Fonctionnalités\" id=\"fonctionnalites\">\r\n                        <h1>Fonctionnalités de Shiro</h1>\r\n                        <div className=\"Bloc\">\r\n                            <div className=\"bloc1\">\r\n                                <img\r\n                                    src={Fonctionnalite1}\r\n                                    alt=\"Reconnaissance vocale\"\r\n                                />\r\n                                <h3>Reconnaissance vocale</h3>\r\n                                <p>\r\n                                    SHIRO est capable de reconnaître la voix\r\n                                    d'un chirurgien lorsqu'il est invoqué\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"bloc2\">\r\n                                <img\r\n                                    src={Fonctionnalite2}\r\n                                    alt=\"Transcription\"\r\n                                />\r\n                                <h3>Transcription de la voix en texte</h3>\r\n                                <p>\r\n                                    Shiro est capable de retranscrire la voix en\r\n                                    texte\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"bloc2\">\r\n                                <img\r\n                                    src={Fonctionnalite3}\r\n                                    alt=\"enregistrement\"\r\n                                />\r\n                                <h3>Enregistrement dans une BDD</h3>\r\n                                <p>\r\n                                    SHIRO est capable d'enregistrer les CRO dans\r\n                                    une BDD\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"Bloc\">\r\n                            <div className=\"bloc3\">\r\n                                <img\r\n                                    src={Fonctionnalite4}\r\n                                    alt=\"Reconnaissance vocale\"\r\n                                />\r\n                                <h3>Feedbacks</h3>\r\n                                <p>\r\n                                    SHIRO est capable de répondre lorsqu'on lui\r\n                                    pose une question\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"bloc4\">\r\n                                <img\r\n                                    src={Fonctionnalite5}\r\n                                    alt=\"Reconnaissance vocale\"\r\n                                />\r\n                                <h3>Modification d'un CRO</h3>\r\n                                <p>\r\n                                    Il est possible d'effectuer une modification\r\n                                    directement sur le site\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"bloc4\">\r\n                                <img\r\n                                    src={Fonctionnalite6}\r\n                                    alt=\"Reconnaissance vocale\"\r\n                                />\r\n                                <h3>Suivi des anciens CRO</h3>\r\n                                <p>\r\n                                    Il est possible de consulter les anciens CRO\r\n                                    enregistrés via SHIRO\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Bleu\">\r\n                    <div className=\"Contact\" id=\"contact\">\r\n                        <h1>Créateurs</h1>\r\n\r\n                        <div className=\"membresGroupe\">\r\n                            <div className=\"membre\">\r\n                                <img src={Serina} className=\"imgMembre\"></img>\r\n                                <h3>Sérina CHHEM</h3>\r\n                                <p>Chef de projet</p>\r\n                            </div>\r\n                            <div className=\"membre\">\r\n                                <img src={Etienne} className=\"imgMembre\"></img>\r\n                                <h3>Etienne GALLAIS</h3>\r\n                                <p>Responsable partenariats</p>\r\n                            </div>\r\n                            <div className=\"membre\">\r\n                                <img src={Thomas} className=\"imgMembre\"></img>\r\n                                <h3>Thomas GEORGE</h3>\r\n                                <p>Développeur front-end</p>\r\n                            </div>\r\n                            <div className=\"membre\">\r\n                                <img src={Jordan} className=\"imgMembre\"></img>\r\n                                <h3>Jordan DO BARREIRO</h3>\r\n                                <p>Développeur back-end</p>\r\n                            </div>\r\n                            <div className=\"membre\">\r\n                                <img src={Nathan} className=\"imgMembre\"></img>\r\n                                <h3>Nathan LANCMAN</h3>\r\n                                <p>Responsable produit</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\Jordan\\Desktop\\Cours\\ING5\\PFE\\pfeShiroReact\\client\\src\\components\\Form.js",["45","46","47","48","49","50","51","52"],"import Dictaphone from \"./Dictaphone.js\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport SpeechRecognition, {\r\n    useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { host } from \"../config.json\";\r\n\r\ntoast.configure();\r\nconst Form = () => {\r\n    const SpeechRecognitionz =\r\n        window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    let resp = false;\r\n\r\n    function process(rawText) {\r\n        resp = false;\r\n        console.log(rawText);\r\n        let text = rawText.replace(/\\s/g, \"\");\r\n        text = text.toLowerCase();\r\n        console.log(\"text = \", text);\r\n        let response = null;\r\n        switch (text) {\r\n            case \"bonjour\":\r\n                response = \"bonjour\";\r\n                break;\r\n            case \"relislecompte-rendu\":\r\n                response = cro;\r\n                break;\r\n            case \"recommence\":\r\n                response = \"j'ai supprimé le texte du compte-rendu\";\r\n                setCro(\"\");\r\n                break;\r\n            case \"merci\":\r\n                response = \"de rien\";\r\n                break;\r\n            // toggleBtn();\r\n        }\r\n        if (!response) {\r\n            // window.open(`http://google.com/search?q=${rawText.replace(\"search\", \"\")}`, \"_blank\");\r\n            resp = true;\r\n            return \"C'est noté\";\r\n        }\r\n        return response;\r\n    }\r\n\r\n    const hasBeenUpdated = useRef(false);\r\n    const [cro, setCro] = useState(\"\");\r\n    const [firstname_pat, setFirstname_pat] = useState(\"\");\r\n    const [lastname_pat, setLastname_pat] = useState(\"\");\r\n    const [firstname_med, setFirstname_med] = useState(\"\");\r\n    const [lastname_med, setLastname_med] = useState(\"\");\r\n    const [status, setStatus] = useState({ type: null, message: \"\" });\r\n    const [message, setMessage] = useState([]);\r\n    const commands = [\r\n        {\r\n            command: [\"C'est parti\", \"Ok Shiro\", \"Shiro\"],\r\n            callback: () =>\r\n                setMessage(\r\n                    `Bonjour, je suis Shiro. Quel est votre nom Docteur ?`\r\n                ),\r\n        },\r\n        {\r\n            command: [\"Je suis docteur *\"],\r\n            callback: (nomDocteur) =>\r\n                setMessage(`Alors enchanté docteur ${nomDocteur}`),\r\n        },\r\n        {\r\n            command: [\r\n                \"Je veux enregistrer un compte rendu\",\r\n                \"Compte-rendu\",\r\n                \"CRO\",\r\n                \"Enregistrer un compte-rendu\",\r\n            ],\r\n            callback: () =>\r\n                setMessage(\r\n                    \"D'accord, quels sont les noms et prénoms de votre patient\"\r\n                ),\r\n        },\r\n        {\r\n            command: [\r\n                ,\r\n                \"Mon patient est *\",\r\n                \"Il s'appelle *\",\r\n                \"Son nom est * et son prénom est *\",\r\n            ],\r\n            callback: (nomPatient) =>\r\n                setMessage(\r\n                    `D'accord, vous venez d'opérer ${nomPatient} aujourd'hui`\r\n                ),\r\n        },\r\n    ];\r\n    // const { transcript, listening } = useSpeechRecognition({ commands });\r\n    const { transcript, listening } = useSpeechRecognition();\r\n    useEffect(() => {\r\n        console.log(listening, transcript, hasBeenUpdated);\r\n        if (!transcript) return;\r\n        if (listening) return (hasBeenUpdated.current = false);\r\n        if (hasBeenUpdated.current) return;\r\n        hasBeenUpdated.current = true;\r\n        // setCro(cro + \"\\n\" + transcript);\r\n        const response = process(transcript);\r\n        speechSynthesis.speak(new SpeechSynthesisUtterance(response));\r\n        if (resp) setCro(cro + \"\\n\" + transcript);\r\n    }, [cro, transcript, listening]);\r\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n        return null;\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setStatus({ type: null, message: \"\" });\r\n        try {\r\n            await fetch(`${host}/cro`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    fn_pat: firstname_pat,\r\n                    ln_pat: lastname_pat,\r\n                    fn_med: firstname_med,\r\n                    ln_med: lastname_med,\r\n                    cro: cro,\r\n                }),\r\n            });\r\n            toast.success(\"Compte-rendu enregistré !\", { autoClose: 3000 });\r\n            setStatus({ type: \"success\", message: \"Enregistrement réussi\" });\r\n            setLastname_pat(\"\");\r\n            setFirstname_pat(\"\");\r\n            setLastname_med(\"\");\r\n            setFirstname_med(\"\");\r\n            setCro(\"\");\r\n            // window.setTimeout(function () {\r\n            //     window.location.href = \"/cro\";\r\n            // }, 3000);\r\n        } catch (e) {\r\n            console.error(e);\r\n            toast.error(\"Désolé, une erreur est survenue.\");\r\n            setStatus({\r\n                type: \"error\",\r\n                message: \"Erreur lors de l'enregistrement\",\r\n            });\r\n        }\r\n    };\r\n    const dateComplete = new Date();\r\n    const year = dateComplete.getFullYear();\r\n    const month = dateComplete.getMonth() + 1;\r\n    const date = dateComplete.getDate();\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"croPage\">\r\n                <section className=\"glass\">\r\n                    <div className=\"cro-Surgeon\">\r\n                        <Dictaphone listening={listening} />\r\n\r\n                        <form onSubmit={handleSubmit}>\r\n                            <h1>Chirurgien opérateur</h1>\r\n                            <p>Nom :</p>\r\n                            <input\r\n                                className=\"docteurInput\"\r\n                                value={lastname_med}\r\n                                name=\"lastname_med\"\r\n                                onChange={(e) =>\r\n                                    setLastname_med(e.target.value)\r\n                                }\r\n                            />\r\n                            <p>Prénom :</p>\r\n                            <input\r\n                                className=\"docteurInput\"\r\n                                value={firstname_med}\r\n                                name=\"firstname_med\"\r\n                                onChange={(e) =>\r\n                                    setFirstname_med(e.target.value)\r\n                                }\r\n                            />\r\n                            <p>\r\n                                0{date}/0{month}/{year}\r\n                            </p>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"cro-Patient\">\r\n                        <h1>Compte-rendu opératoire</h1>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <p>Nom du patient :</p>\r\n                            <input\r\n                                value={lastname_pat}\r\n                                name=\"lastname_pat\"\r\n                                className=\"patientInput\"\r\n                                onChange={(e) =>\r\n                                    setLastname_pat(e.target.value)\r\n                                }\r\n                            />\r\n                            <p>Prénom du patient :</p>\r\n                            <input\r\n                                className=\"patientInput\"\r\n                                value={firstname_pat}\r\n                                name=\"firstname_pat\"\r\n                                onChange={(e) =>\r\n                                    setFirstname_pat(e.target.value)\r\n                                }\r\n                            />\r\n                        </form>\r\n\r\n                        <form onSubmit={handleSubmit}>\r\n                            <p>Parlez pour remplir le CRO :</p>\r\n                            <textarea\r\n                                className=\"croInput\"\r\n                                value={cro}\r\n                                onChange={(e) => setCro(e.target.value)}\r\n                                disabled={listening}\r\n                            ></textarea>\r\n                            <div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    // onClick={notify}\r\n                                    value=\"Valider\"\r\n                                    className=\"buttonValider\"\r\n                                >\r\n                                    Valider\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n\r\n            <div className=\"circle1\"> </div>\r\n            <div className=\"circle2\"> </div>\r\n            <div className=\"circle3\"> </div>\r\n            <div className=\"circle4\"> </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","C:\\Users\\Jordan\\Desktop\\Cours\\ING5\\PFE\\pfeShiroReact\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Jordan\\Desktop\\Cours\\ING5\\PFE\\pfeShiroReact\\client\\src\\components\\Cro.js",[],"C:\\Users\\Jordan\\Desktop\\Cours\\ING5\\PFE\\pfeShiroReact\\client\\src\\components\\Dictaphone.js",[],["53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":168,"column":33,"nodeType":"61","endLine":168,"endColumn":73},{"ruleId":"59","severity":1,"message":"60","line":173,"column":33,"nodeType":"61","endLine":173,"endColumn":74},{"ruleId":"59","severity":1,"message":"60","line":178,"column":33,"nodeType":"61","endLine":178,"endColumn":73},{"ruleId":"59","severity":1,"message":"60","line":183,"column":33,"nodeType":"61","endLine":183,"endColumn":73},{"ruleId":"59","severity":1,"message":"60","line":188,"column":33,"nodeType":"61","endLine":188,"endColumn":73},{"ruleId":"62","severity":1,"message":"63","line":6,"column":10,"nodeType":"64","messageId":"65","endLine":6,"endColumn":24},{"ruleId":"62","severity":1,"message":"66","line":13,"column":11,"nodeType":"64","messageId":"65","endLine":13,"endColumn":29},{"ruleId":"67","severity":1,"message":"68","line":24,"column":9,"nodeType":"69","messageId":"70","endLine":39,"endColumn":10},{"ruleId":"62","severity":1,"message":"71","line":54,"column":12,"nodeType":"64","messageId":"65","endLine":54,"endColumn":18},{"ruleId":"62","severity":1,"message":"72","line":55,"column":12,"nodeType":"64","messageId":"65","endLine":55,"endColumn":19},{"ruleId":"62","severity":1,"message":"73","line":56,"column":11,"nodeType":"64","messageId":"65","endLine":56,"endColumn":19},{"ruleId":"74","severity":1,"message":"75","line":82,"column":22,"nodeType":"76","messageId":"77","endLine":87,"endColumn":14},{"ruleId":"78","severity":1,"message":"79","line":106,"column":8,"nodeType":"76","endLine":106,"endColumn":36,"suggestions":"80"},{"ruleId":"55","replacedBy":"81"},{"ruleId":"57","replacedBy":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","'SpeechRecognitionz' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'status' is assigned a value but never used.","'message' is assigned a value but never used.","'commands' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'process' and 'resp'. Either include them or remove the dependency array.",["85"],["83"],["84"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [cro, transcript, listening, process, resp]",{"range":"88","text":"89"},[3762,3790],"[cro, transcript, listening, process, resp]"]