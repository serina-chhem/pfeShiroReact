[{"/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/index.js":"1","/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/reportWebVitals.js":"2","/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/App.js":"3","/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/components/Form.js":"4","/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/components/Dictaphone.js":"5","/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/components/Commands.js":"6","/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/components/Cro.js":"7","/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/components/Navbar.js":"8","/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/components/MainPage.js":"9"},{"size":500,"mtime":1610995262713,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1610995262713,"results":"12","hashOfConfig":"11"},{"size":1080,"mtime":1612027731861,"results":"13","hashOfConfig":"11"},{"size":5899,"mtime":1612034220389,"results":"14","hashOfConfig":"11"},{"size":614,"mtime":1612025664262,"results":"15","hashOfConfig":"11"},{"size":1409,"mtime":1611868492944,"results":"16","hashOfConfig":"11"},{"size":2602,"mtime":1611859603227,"results":"17","hashOfConfig":"11"},{"size":1303,"mtime":1612032928114,"results":"18","hashOfConfig":"11"},{"size":8561,"mtime":1612035523718,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"85z3kh",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/index.js",[],["44","45"],"/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/reportWebVitals.js",[],"/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/App.js",[],"/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/components/Form.js",["46","47","48","49","50","51"],"import Dictaphone from \"./Dictaphone.js\";\nimport { useEffect, useState, useRef } from \"react\";\nimport SpeechRecognition, {useSpeechRecognition} from \"react-speech-recognition\";\n\nconst Form = () => {\n\n    const hasBeenUpdated = useRef(false);\n    const [cro, setCro] = useState(\"\");\n\n    const [firstname_pat, setFirstname_pat] = useState(\"\");\n    const [lastname_pat, setLastname_pat] = useState(\"\");\n    const [firstname_med, setFirstname_med] = useState(\"\");\n    const [lastname_med, setLastname_med] = useState(\"\");\n    const [message, setMessage] = useState([]);\n\n    /*const [firstname, setFirstname] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");*/\n    const [pat_id, setPatId] = useState(\"\");\n    const [med_id, setMedId] = useState(\"\");\n\n    const commands = [\n        {\n            command: [\"C'est parti\", 'Ok Shiro', 'Shiro'],\n            callback: () => setMessage(`Bonjour, je suis Shiro. Quel est votre nom Docteur ?`)\n        },\n        {\n            command: [\"Je suis docteur *\"],\n            callback: (nomDocteur) => setMessage(`Alors enchanté docteur ${nomDocteur}`)\n        },\n        {\n            command: ['Je veux enregistrer un compte rendu', 'Compte-rendu', 'CRO', 'Enregistrer un compte-rendu'],\n            callback:() =>  setMessage(\"D'accord, quels sont les noms et prénoms de votre patient\")\n        },\n        {\n            command: [, \"Mon patient est *\", \"Il s'appelle *\", \"Son nom est * et son prénom est *\"],\n            callback: (nomPatient) => setMessage(`D'accord, vous venez d'opérer ${nomPatient} aujourd'hui`)\n        },\n    ]\n    const { transcript, listening } = useSpeechRecognition({commands});\n\n\n    useEffect(() => {\n        console.log(listening, transcript, hasBeenUpdated);\n        if (!transcript) return;\n        if (listening) return (hasBeenUpdated.current = false);\n        if (hasBeenUpdated.current) return;\n        hasBeenUpdated.current = true;\n        setCro(cro + \"\\n\" + transcript);\n        \n    }, [cro, transcript, listening]);\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n        return null;\n    }\n\n    const handleSubmit = () => {\n        try {\n            fetch(\"http://localhost:9000/api/cro\", {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    fn_pat: firstname_pat,\n                    ln_pat: lastname_pat,\n                    fn_med: firstname_med,\n                    ln_med: lastname_med,\n                    cro: cro,\n                }),\n            });\n        } catch (e) {\n            console.error(e);\n        }\n    };\n\n    const dateComplete = new Date();\n    const year = dateComplete.getFullYear();\n    const month = dateComplete.getMonth() + 1;\n    const date = dateComplete.getDate();\n    \n    \n\n    return (\n        <div>\n\n            <div className=\"croPage\">\n\n                <section className=\"glass\">\n                \n                    <div className=\"cro-Surgeon\">\n\n                    <Dictaphone listening={listening}  />\n\n                        <form onSubmit={handleSubmit}>\n                            \n                            <h1>Chirurgien opérateur</h1>\n                            <p>Nom :</p>\n                            <input\n                                value={lastname_med}\n                                name=\"lastname_med\"\n                                onChange={(e) => setLastname_med(e.target.value)}\n                            />\n                            <p>Prénom :</p>\n                            <input\n                                value={firstname_med}\n                                name=\"firstname_med\"\n                                onChange={(e) => setFirstname_med(e.target.value)}\n                            />\n                            <p>{date}/0{month}/{year}</p>\n                            \n                        </form>\n\n                    </div>\n\n                    <div className=\"cro-Patient\">\n                    \n                    <h1>Compte-rendu opératoire</h1>\n                        <form onSubmit={handleSubmit}>\n                            \n                            <p>Nom du patient :</p>\n                            <input\n                                value={lastname_pat}\n                                name=\"lastname_pat\"\n                                onChange={(e) => setLastname_pat(e.target.value)}\n                                disabled={listening}\n                            />\n                            <p>Prénom du patient :</p>\n                            <input\n                                value={firstname_pat}\n                                name=\"firstname_pat\"\n                                onChange={(e) => setFirstname_pat(e.target.value)}\n                            />\n                            \n                        </form>\n\n\n                        <form onSubmit={handleSubmit}>\n                            <p>Parlez pour remplir le CRO :</p>\n                            <textarea\n                                value={cro}\n                                onChange={(e) => setCro(e.target.value)}\n                                disabled={listening}\n                            >\n                            </textarea>\n                            <div>\n                                <input type=\"submit\" value=\"Valider\" className=\"buttonValider\"/>\n                            </div>\n\n                        </form>\n\n                    </div>\n\n\n                </section>\n\n            </div>\n\n            <div className=\"circle1\"> </div>\n            <div className=\"circle2\"> </div>\n            <div className=\"circle3\"> </div>\n            <div className=\"circle4\"> </div>\n            \n        </div>\n    );\n};\n\nexport default Form;\n","/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/components/Dictaphone.js",[],["52","53"],"/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/components/Commands.js",["54","55"],"import React, { useState } from 'react'\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\n\nconst Commands = () => {\n\n    const [message, setMessage] = useState('')\n    const date = new Date().getDate();\n    const day = new Date().getDay();\n\n    const month = new Date().getMonth();\n\n    const commands = [\n        {\n            command: [\"C'est parti\", 'Ok Shiro', 'Shiro'],\n            callback: () => setMessage(`Bonjour, je suis Shiro. Quel est votre nom Docteur ?`)\n        },\n        {\n            command: [\"Je suis docteur *\"],\n            callback: (nomDocteur) => setMessage(`Alors enchanté docteur ${nomDocteur}`)\n        },\n        {\n            command: ['Je veux enregistrer un compte rendu', 'Compte-rendu', 'CRO', 'Enregistrer un compte-rendu'],\n            callback:() =>  setMessage(\"D'accord, quels sont les noms et prénoms de votre patient\")\n        },\n        {\n            command: [, \"Mon patient est *\", \"Il s'appelle * *\", \"Son nom est * et son prénom est *\"],\n            callback: (nomPatient, prenomPatient) => setMessage(`D'accord, vous venez d'opérer ${prenomPatient} ${nomPatient} aujourd'hui ${day} ${date} ${month}`)\n        },\n    ]\n\n    const {transcript} = useSpeechRecognition({commands})\n\n\n    return (\n       \n        <div>\n            <p>{transcript}</p>\n\n            <p>{message}</p>\n        </div>\n    )\n}\n\nexport default Commands\n",["56","57"],"/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/components/Cro.js",[],"/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/components/Navbar.js",[],"/Users/serina/Desktop/ING5/PFE_Shiro/pfeShiroReact/client/src/components/MainPage.js",["58","59","60","61","62","63"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\nimport proto from \"../images/proto.png\";\nimport Serina from \"../images/serina.JPG\";\nimport Etienne from \"../images/etienne.jpg\";\nimport Nathan from \"../images/nathan.jpg\";\n\nimport Surgeons from '../images/surgeons.svg';\nimport Fonctionnalite1 from '../images/func1.svg';\nimport Fonctionnalite2 from '../images/func2.svg';\nimport Fonctionnalite3 from '../images/func3.svg';\nimport Fonctionnalite4 from '../images/func4.svg';\nimport Fonctionnalite5 from '../images/func5.svg';\nimport Fonctionnalite6 from '../images/func6.svg';\n\n\nexport default class MainPage extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"Blanc\">\n                    <div className=\"Accueil\">\n                        <h1>\n                            L'assistant vocal qui comprend les comptes-rendus\n                            des chirurgiens\n                        </h1>\n                        <img src={Surgeons} alt=\"surgeonsAccueil\" className=\"imgAccueil\" />\n                        \n                        <div className=\"buttonAccueil\">\n                            <button>\n                                <Link to=\"/form\" className=\"nav-link\">\n                                    Enregistrement d'un CRO\n                                </Link>\n                            </button>\n                        \n                            <button>\n                                <Link to=\"/cro\" className=\"nav-link\">\n                                    Suivi des CROs\n                                </Link>\n                            </button>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className=\"Bleu\">\n                    <div className=\"Propos\" id=\"propos\">\n                        <h1>À propos</h1>\n                        <p>\n                            <span class=\"marge\">\n                                Ce projet baptisé SHIRO est né du Centre de\n                                Recherche Interdisciplinaires de Paris et vise à\n                                alléger le travail des chirurgiens praticiens\n                                hospitaliers lors de la rédaction de\n                                comptes-rendus opératoires.\n                            </span>\n                            <br /><br />\n                            <span class=\"marge\">\n                                En effet, des chirurgiens peuvent passer en moyenne une\n                                heure par jour à rédiger manuellement des comptes-rendus et les font \n                                valider par un secrétariat. D'autres enregistrent leurs comptes-rendus sur \n                                un dictaphone et les font transcrire en texte par un tiers. \n                            </span>\n                            <br /><br />\n                            <span class=\"marge\">\n                                En partant de ce constat, nous avons eu l'intenton supprimer toute étape \n                                de validation par un tiers et ainsi d'optimiser les tâches secondaires du corps chirugical.\n                                Nous avons donc décidé de créer un assistant vocal permettant l'automatisation de la rédaction d’un compte-rendu\n                                opératoire. \n                            </span>\n                        </p>\n                    </div>\n                </div>\n\n                <div className=\"Blanc\">\n                    <div className=\"Fonctionnalités\" id=\"fonctionnalites\">\n                        <h1>Fonctionnalités de Shiro</h1>\n                        <div className=\"Bloc\">\n                            <div className=\"bloc1\">\n                                <img src={Fonctionnalite1} alt=\"Reconnaissance vocale\" />\n                                <h3>Reconnaissance vocale</h3>\n                                <p>\n                                    SHIRO est capable de reconnaître la voix\n                                    d'un chirurgien lorsqu'il est invoqué\n                                </p>\n                            </div>\n                            <div className=\"bloc2\">\n                                <img src={Fonctionnalite2} alt=\"Transcription\" />\n                                <h3>Transcription de la voix en texte</h3>\n                                <p>\n                                    Shiro est capable de retranscrire la voix en\n                                    texte\n                                </p>\n                            </div>\n                            <div className=\"bloc2\">\n                                <img src={Fonctionnalite3} alt=\"enregistrement\" />\n                                <h3>Enregistrement dans une BDD</h3>\n                                <p>\n                                    SHIRO est capable d'enregistrer les CRO dans\n                                    une BDD\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"Bloc\">\n                            <div className=\"bloc3\">\n                                <img src={Fonctionnalite4} alt=\"Reconnaissance vocale\" />\n                                <h3>Feedbacks</h3>\n                                <p>\n                                    SHIRO est capable de répondre lorsqu'on lui\n                                    pose une question\n                                </p>\n                            </div>\n                            <div className=\"bloc4\">\n                                <img src={Fonctionnalite5} alt=\"Reconnaissance vocale\" />\n                                <h3>Modification d'un CRO</h3>\n                                <p>\n                                    Il est possible d'effectuer une modification\n                                    directement sur le site\n                                </p>\n                            </div>\n                            <div className=\"bloc4\">\n                                <img src={Fonctionnalite6} alt=\"Reconnaissance vocale\" />\n                                <h3>Suivi des anciens CRO</h3>\n                                <p>\n                                    Il est possible de consulter les anciens CRO\n                                    enregistrés via SHIRO\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n{/* \n                <div className=\"Bleu\">\n                    <div className=\"Prototype\">\n                        <h1>Prototype</h1>\n                        <img src={proto} className=\"App-proto\" alt=\"logo\" />\n                    </div>\n                </div> */}\n\n                <div className=\"Bleu\">\n                    <div className=\"Contact\" id=\"contact\">\n                        <h1>Créateurs</h1>\n\n                        <div className=\"membresGroupe\">\n\n                            <div className=\"membre\">\n                                <img src={Serina} className=\"imgMembre\"></img>\n                                <h3>Sérina CHHEM</h3>\n                                <p>Chef de projet</p>\n                            </div>\n                            <div className=\"membre\">\n                                <img src={Etienne} className=\"imgMembre\"></img>\n                                <h3>Etienne GALLAIS</h3>\n                                <p>Responsable partenariats</p>\n                            </div>\n                            <div className=\"membre\">\n                                <img></img>\n                                <h3>Thomas GEORGE</h3>\n                                <p>Développeur front-end</p>\n                            </div>\n                            <div className=\"membre\">\n                                <img></img>\n                                <h3>Jordan DO BARREIRO</h3>\n                                <p>Développeur back-end</p>\n                            </div>\n                            <div className=\"membre\">\n                                <img src={Nathan} className=\"imgMembre\"></img>\n                                <h3>Nathan LANCMAN</h3>\n                                <p>Responsable produit</p>\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":14,"column":12,"nodeType":"70","messageId":"71","endLine":14,"endColumn":19},{"ruleId":"68","severity":1,"message":"72","line":18,"column":12,"nodeType":"70","messageId":"71","endLine":18,"endColumn":18},{"ruleId":"68","severity":1,"message":"73","line":18,"column":20,"nodeType":"70","messageId":"71","endLine":18,"endColumn":28},{"ruleId":"68","severity":1,"message":"74","line":19,"column":12,"nodeType":"70","messageId":"71","endLine":19,"endColumn":18},{"ruleId":"68","severity":1,"message":"75","line":19,"column":20,"nodeType":"70","messageId":"71","endLine":19,"endColumn":28},{"ruleId":"76","severity":1,"message":"77","line":35,"column":22,"nodeType":"78","messageId":"79","endLine":35,"endColumn":100},{"ruleId":"64","replacedBy":"80"},{"ruleId":"66","replacedBy":"81"},{"ruleId":"68","severity":1,"message":"82","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":25},{"ruleId":"76","severity":1,"message":"77","line":26,"column":22,"nodeType":"78","messageId":"79","endLine":26,"endColumn":102},{"ruleId":"64","replacedBy":"83"},{"ruleId":"66","replacedBy":"84"},{"ruleId":"68","severity":1,"message":"85","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":13},{"ruleId":"86","severity":1,"message":"87","line":148,"column":33,"nodeType":"88","endLine":148,"endColumn":73},{"ruleId":"86","severity":1,"message":"87","line":153,"column":33,"nodeType":"88","endLine":153,"endColumn":74},{"ruleId":"86","severity":1,"message":"87","line":158,"column":33,"nodeType":"88","endLine":158,"endColumn":38},{"ruleId":"86","severity":1,"message":"87","line":163,"column":33,"nodeType":"88","endLine":163,"endColumn":38},{"ruleId":"86","severity":1,"message":"87","line":168,"column":33,"nodeType":"88","endLine":168,"endColumn":73},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar","'pat_id' is assigned a value but never used.","'setPatId' is assigned a value but never used.","'med_id' is assigned a value but never used.","'setMedId' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray",["89"],["90"],"'SpeechRecognition' is defined but never used.",["89"],["90"],"'proto' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]