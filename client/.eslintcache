[{"C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\index.js":"1","C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\App.js":"2","C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\components\\Navbar.js":"4","C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\components\\Cro.js":"5","C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\components\\MainPage.js":"6","C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\components\\Form.js":"7","C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\components\\Dictaphone.js":"8","C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\components\\Commands.js":"9"},{"size":517,"mtime":1611946093078,"results":"10","hashOfConfig":"11"},{"size":6196,"mtime":1611948053272,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1611946093079,"results":"13","hashOfConfig":"11"},{"size":1404,"mtime":1611948070517,"results":"14","hashOfConfig":"11"},{"size":2676,"mtime":1611946093061,"results":"15","hashOfConfig":"11"},{"size":5840,"mtime":1611947943992,"results":"16","hashOfConfig":"11"},{"size":4658,"mtime":1611946093068,"results":"17","hashOfConfig":"11"},{"size":523,"mtime":1611946093065,"results":"18","hashOfConfig":"11"},{"size":1454,"mtime":1611946093062,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1tbuxid",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},"C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\index.js",[],["41","42"],"C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\App.js",[],"C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\components\\Cro.js",[],"C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\components\\MainPage.js",[],"C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\components\\Form.js",[],"C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\components\\Dictaphone.js",[],"C:\\Users\\Nathan\\Desktop\\pfeShiroReact\\client\\src\\components\\Commands.js",["43","44"],"import React, { useState } from 'react'\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\r\n\r\nconst Commands = () => {\r\n\r\n    const [message, setMessage] = useState('')\r\n    const date = new Date().getDate();\r\n    const day = new Date().getDay();\r\n\r\n    const month = new Date().getMonth();\r\n\r\n    const commands = [\r\n        {\r\n            command: [\"C'est parti\", 'Ok Shiro', 'Shiro'],\r\n            callback: () => setMessage(`Bonjour, je suis Shiro. Quel est votre nom Docteur ?`)\r\n        },\r\n        {\r\n            command: [\"Je suis docteur *\"],\r\n            callback: (nomDocteur) => setMessage(`Alors enchanté docteur ${nomDocteur}`)\r\n        },\r\n        {\r\n            command: ['Je veux enregistrer un compte rendu', 'Compte-rendu', 'CRO', 'Enregistrer un compte-rendu'],\r\n            callback:() =>  setMessage(\"D'accord, quels sont les noms et prénoms de votre patient\")\r\n        },\r\n        {\r\n            command: [, \"Mon patient est *\", \"Il s'appelle * *\", \"Son nom est * et son prénom est *\"],\r\n            callback: (nomPatient, prenomPatient) => setMessage(`D'accord, vous venez d'opérer ${prenomPatient} ${nomPatient} aujourd'hui ${day} ${date} ${month}`)\r\n        },\r\n    ]\r\n\r\n    const {transcript} = useSpeechRecognition({commands})\r\n\r\n\r\n    return (\r\n       \r\n        <div>\r\n             <p>{transcript}</p>\r\n\r\n            <p>{message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Commands\r\n",["45","46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":25},{"ruleId":"55","severity":1,"message":"56","line":26,"column":22,"nodeType":"57","messageId":"58","endLine":26,"endColumn":102},{"ruleId":"47","replacedBy":"59"},{"ruleId":"49","replacedBy":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'SpeechRecognition' is defined but never used.","Identifier","unusedVar","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray",["61"],["62"],"no-global-assign","no-unsafe-negation"]